---
# Simple Ansible playbook to create ELB and EC2 instances on AWS
- name: Provision an EC2 Instance
  hosts: localhost
  connection: local
  gather_facts: False
  tags: provisioning
  # Necessary Variables for creating/provisioning the EC2 Instance
  vars:
    instance_type: t2.micro
    security_group: ansible-webserver # Change the security group name here
    image: ami-82be18ed
    keypair: id_rsa
    region: eu-central-1
    count: 2
    # Task that will be used to Launch/Create an EC2 Instance
  tasks:
    - name: Create a security group
      local_action: 
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
           - proto: all
             cidr_ip: 0.0.0.0/0
      register: basic_firewall

    - name: Launch the new EC2 Instance
      local_action: ec2 
                    group={{ security_group }} 
                    instance_type={{ instance_type}} 
                    image={{ image }} 
                    wait=true 
                    region={{ region }} 
                    keypair={{ keypair }}
                    count={{count}}
      register: ec2

#    - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
#      local_action: lineinfile 
#                    dest="./hosts" 
#                    regexp={{ item.public_ip }} 
#                    insertafter="[webserver]" line={{ item.public_ip }}
#      with_items: "{{ ec2.instances }}"

    - name: Add the newly created EC2 instance(s) to the local host group
      add_host:
        name: "{{ item.public_ip }}"
        groups: webserver
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      local_action: wait_for 
                    host={{ item.public_ip }} 
                    port=22 
                    state=started
      with_items: "{{ ec2.instances }}"

    - name: Add tag to Instance(s)
      local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Name: webserver

- name: OS Hardening and installaing webservice on EC2
  hosts: webserver
  become: true
  remote_user: ec2-user
  vars:
    os_ignore_users: ['ec2-user']
  roles:
    #- ansible-os-hardening
    - ansible-httpd-demo

- name: spin up the load balancer and add the servers to it
  hosts: 127.0.0.1
  connection: local
  gather_facts: False
  vars:
    region: eu-central-1
    zone: eu-central-1a
  tasks:
    - name: setup a simple load balancer
      ec2_elb_lb:
        name: aws-elb-my
        state: present
        region: "{{ region }}"
        zones:
          - "{{ zone }}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: aws-elb

    - name: add the  webservers to the load balancer
      local_action: ec2_elb
      args:
        instance_id: "{{ item.id }}"
        ec2_elbs: aws-elb-my
        state: present
        region: "{{ region }}"
      with_items: "{{ ec2.tagged_instances }}"
